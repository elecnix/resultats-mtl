#!/usr/bin/env ruby
require 'rexml/document'

# TODO Empty DB and insert new records in a single DB transaction

file = File.new(ARGV[0])
doc = REXML::Document.new(file.read)

doc.root.each_element('//resultats_maire/sommaire') do |tag|
  @sommaire = Sommaire.new
  ['nb_electeurs_inscrits', 'nb_total_voix_recueillies', 'nb_bulletins_rejetes', 'taux_participation', 'nb_bureaux_depouilles', 'nb_bureaux_total'].each do |attry|
    @sommaire.update_attribute attry, tag.elements[attry].text
  end
  @sommaire.save!
  puts @sommaire.inspect
end

doc.root.each_element('//arrondissement') do |tag|
  @arr = Arrondissement.find_or_initialize_by_mtl_id tag.attributes['id']
  if @arr.new_record?
    @arr.nom = tag.text
    @arr.save!
    puts @arr.inspect
  end
end

doc.root.each_element('//parti') do |tag|
  @arr = Parti.find_or_initialize_by_mtl_id tag.attributes['id']
  if @arr.new_record?
    @arr.nom = tag.text
    @arr.save!
    puts @arr.inspect
  end
end

doc.root.each_element('//district') do |tag|
  if tag.attributes['id'].to_i > 0
    @district = District.find_or_initialize_by_mtl_id tag.attributes['id']
    if @district.new_record?
      @district.nom = tag.text
      @district.save!
      puts @district.inspect
    end
  end
end

doc.root.each_element('//resultats_maire/sommaire/candidat') do |tag|
  @maire = CandidatMaire.new
  #@maire.update_attributes tag.elements.to_hash {|e| [e.name, e.text] }
  ['nom', 'prenom', 'nb_voix_obtenues', 'nb_voix_majorite'].each do |attry|
    @maire.update_attribute attry, tag.elements[attry].text
  end
  @maire.mtl_id = tag.attributes['id']
  @maire.parti = Parti.find_by_mtl_id(tag.elements['parti'].attributes['id'])
  @maire.save!
  puts @maire.inspect
end

doc.root.each_element('//resultats_maire/arrondissements/arrondissement') do |tag|
  arrondissement = Arrondissement.find_by_mtl_id(tag.attributes['id'])
  tag.each_element('candidat') do |can|
    candidat = arrondissement.candidat_maire_arrondissements.build
    ['nom', 'prenom', 'nb_voix_obtenues'].each do |attry|
      candidat.update_attribute attry, can.elements[attry].text
    end
    candidat.mtl_id = can.attributes['id']
    candidat.parti = Parti.find_by_mtl_id(can.elements['parti'].attributes['id'])
    candidat.save!
    puts candidat.inspect
  end
end

doc.root.each_element('//resultats_postes/poste') do |tag|
  arrondissement = Arrondissement.find_by_mtl_id(tag.elements['arrondissement'].attributes['id'])
  district = District.find_by_mtl_id(tag.elements['district'].attributes['id'])
  poste = Poste.new
  poste.arrondissement = arrondissement
  poste.district = district
  poste.mtl_id = tag.attributes['id']
  poste.mtl_type = tag.elements['type'].text
  %W{nom nb_electeurs_inscrits nb_total_voix_recueillies nb_bulletins_rejetes taux_participation nb_bureaux_depouilles nb_bureaux_total}.each do |attry|
    poste.update_attribute attry, tag.elements[attry].text
  end
  puts poste.inspect
  poste.save!
  tag.each_element('candidat') do |can|
    candidat = poste.candidats.build
    ['nom', 'prenom', 'nb_voix_obtenues', 'nb_voix_majorite'].each do |attry|
      candidat.update_attribute attry, can.elements[attry].text
    end
    candidat.parti = Parti.find_by_mtl_id(can.elements['parti'].attributes['id'])
    candidat.mtl_id = can.attributes['id']
    puts candidat.inspect
    candidat.save!
  end
end

